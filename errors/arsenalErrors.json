{
  "_comment": "------------------- Amazon errors ------------------",
  "AccessDenied": {
    "httpCode": 403,
    "description": "Access Denied"
  },
  "AccountProblem": {
    "httpCode": 403,
    "description": "There is a problem with your AWS account that prevents the operation from completing successfully. Please use Contact Us."
  },
  "AmbiguousGrantByEmailAddress": {
    "httpCode": 400,
    "description": "The email address you provided is associated with more than one account."
  },
  "BadDigest": {
    "httpCode": 400,
    "description": "The Content-MD5 you specified did not match what we received."
  },
  "BucketAlreadyExists": {
    "httpCode": 409,
    "description": "The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again."
  },
  "BucketAlreadyOwnedByYou": {
    "httpCode": 409,
    "description": "Your previous request to create the named bucket succeeded and you already own it. You get this error in all AWS regions except US Standard, us-east-1. In us-east-1 region, you will get 200 OK, but it is no-op (if bucket exists S3 will not do anything)."
  },
  "BucketNotEmpty": {
    "httpCode": 409,
    "description": "The bucket you tried to delete is not empty."
  },
  "CredentialsNotSupported": {
    "httpCode": 400,
    "description": "This request does not support credentials."
  },
  "CrossLocationLoggingProhibited": {
    "httpCode": 403,
    "description": "Cross-location logging not allowed. Buckets in one geographic location cannot log information to a bucket in another location."
  },
  "DeleteConflict": {
    "httpCode": 409,
    "description": "The request was rejected because it attempted to delete a resource that has attached subordinate entities. The error message describes these entities."
  },
  "EntityTooSmall": {
    "httpCode": 400,
    "description": "Your proposed upload is smaller than the minimum allowed object size."
  },
  "EntityTooLarge": {
    "httpCode": 400,
    "description": "Your proposed upload exceeds the maximum allowed object size."
  },
  "ExpiredToken": {
    "httpCode": 400,
    "description": "The provided token has expired."
  },
  "IllegalVersioningConfigurationException": {
    "httpCode": 400,
    "description": "Indicates that the versioning configuration specified in the request is invalid."
  },
  "IncompleteBody": {
    "httpCode": 400,
    "description": "You did not provide the number of bytes specified by the Content-Length HTTP header."
  },
  "IncorrectNumberOfFilesInPostRequest": {
    "httpCode": 400,
    "description": "POST requires exactly one file upload per request."
  },
  "InlineDataTooLarge": {
    "httpCode": 400,
    "description": "Inline data exceeds the maximum allowed size."
  },
  "InternalError": {
    "httpCode": 500,
    "description": "We encountered an internal error. Please try again."
  },
  "InvalidAccessKeyId": {
    "httpCode": 403,
    "description": "The AWS access key Id you provided does not exist in our records."
  },
  "InvalidAddressingHeader": {
    "httpCode": 400,
    "description": "You must specify the Anonymous role."
  },
  "InvalidArgument": {
    "httpCode": 400,
    "description": "Invalid Argument"
  },
  "InvalidBucketName": {
    "httpCode": 400,
    "description": "The specified bucket is not valid."
  },
  "InvalidBucketState": {
    "httpCode": 409,
    "description": "The request is not valid with the current state of the bucket."
  },
  "InvalidDigest": {
    "httpCode": 400,
    "description": "The Content-MD5 you specified is not valid."
  },
  "InvalidEncryptionAlgorithmError": {
    "httpCode": 400,
    "description": "The encryption request you specified is not valid. The valid value is AES256."
  },
  "InvalidLocationConstraint": {
    "httpCode": 400,
    "description": "The specified location constraint is not valid."
  },
  "InvalidObjectState": {
    "httpCode": 403,
    "description": "The operation is not valid for the current state of the object."
  },
  "InvalidPart": {
    "httpCode": 400,
    "description": "One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag."
  },
  "InvalidPartOrder": {
    "httpCode": 400,
    "description": "The list of parts was not in ascending order.Parts list must specified in order by part number."
  },
  "InvalidPayer": {
    "httpCode": 403,
    "description": "All access to this object has been disabled."
  },
  "InvalidPolicyDocument": {
    "httpCode": 400,
    "description": "The content of the form does not meet the conditions specified in the policy document."
  },
  "InvalidRange": {
    "httpCode": 416,
    "description": "The requested range cannot be satisfied."
  },
  "InvalidRequest": {
    "httpCode": 400,
    "description": "SOAP requests must be made over an HTTPS connection."
  },
  "InvalidSecurity": {
    "httpCode": 403,
    "description": "The provided security credentials are not valid."
  },
  "InvalidSOAPRequest": {
    "httpCode": 400,
    "description": "The SOAP request body is invalid."
  },
  "InvalidStorageClass": {
    "httpCode": 400,
    "description": "The storage class you specified is not valid."
  },
  "InvalidTargetBucketForLogging": {
    "httpCode": 400,
    "description": "The target bucket for logging does not exist, is not owned by you, or does not have the appropriate grants for the log-delivery group."
  },
  "InvalidToken": {
    "httpCode": 400,
    "description": "The provided token is malformed or otherwise invalid."
  },
  "InvalidURI": {
    "httpCode": 400,
    "description": "Couldn't parse the specified URI."
  },
  "KeyTooLong": {
    "httpCode": 400,
    "description": "Your key is too long."
  },
  "LimitExceeded": {
    "httpCode": 409,
    "description": "    The request was rejected because it attempted to create resources beyond the current AWS account limits. The error message describes the limit exceeded."
  },
  "MalformedACLError": {
    "httpCode": 400,
    "description": "The XML you provided was not well-formed or did not validate against our published schema."
  },
  "MalformedPOSTRequest": {
    "httpCode": 400,
    "description": "The body of your POST request is not well-formed multipart/form-data."
  },
  "MalformedXML": {
    "httpCode": 400,
    "description": "The XML you provided was not well-formed or did not validate against our published schema."
  },
  "MaxMessageLengthExceeded": {
    "httpCode": 400,
    "description": "Your request was too big."
  },
  "MaxPostPreDataLengthExceededError": {
    "httpCode": 400,
    "description": "Your POST request fields preceding the upload file were too large."
  },
  "MetadataTooLarge": {
    "httpCode": 400,
    "description": "Your metadata headers exceed the maximum allowed metadata size."
  },
  "MethodNotAllowed": {
    "httpCode": 405,
    "description": "The specified method is not allowed against this resource."
  },
  "MissingAttachment": {
    "httpCode": 400,
    "description": "A SOAP attachment was expected, but none were found."
  },
  "MissingContentLength": {
    "httpCode": 411,
    "description": "You must provide the Content-Length HTTP header."
  },
  "MissingRequestBodyError": {
    "httpCode": 400,
    "description": "Request body is empty"
  },
  "MissingSecurityElement": {
    "httpCode": 400,
    "description": "The SOAP 1.1 request is missing a security element."
  },
  "MissingSecurityHeader": {
    "httpCode": 400,
    "description": "Your request is missing a required header."
  },
  "NoLoggingStatusForKey": {
    "httpCode": 400,
    "description": "There is no such thing as a logging status subresource for a key."
  },
  "NoSuchBucket": {
    "httpCode": 404,
    "description": "The specified bucket does not exist."
  },
  "NoSuchKey": {
    "httpCode": 404,
    "description": "The specified key does not exist."
  },
  "NoSuchLifecycleConfiguration": {
    "httpCode": 404,
    "description": "The lifecycle configuration does not exist."
  },
  "NoSuchUpload": {
    "httpCode": 404,
    "description": "The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed."
  },
  "NoSuchVersion": {
    "httpCode": 404,
    "description": "Indicates that the version ID specified in the request does not match an existing version."
  },
  "NotImplemented": {
    "httpCode": 501,
    "description": "A header you provided implies functionality that is not implemented."
  },
  "NotModified": {
    "httpCode": 304,
    "description": "Not Modified."
  },
  "NotSignedUp": {
    "httpCode": 403,
    "description": "Your account is not signed up for the S3 service. You must sign up before you can use S3. "
  },
  "NoSuchBucketPolicy": {
    "httpCode": 404,
    "description": "The specified bucket does not have a bucket policy."
  },
  "OperationAborted": {
    "httpCode": 409,
    "description": "A conflicting conditional operation is currently in progress against this resource. Try again."
  },
  "PermanentRedirect": {
    "httpCode": 301,
    "description": "The bucket you are attempting to access must be addressed using the specified endpoint. Send all future requests to this endpoint."
  },
  "PreconditionFailed": {
    "httpCode": 412,
    "description": "At least one of the preconditions you specified did not hold."
  },
  "Redirect": {
    "httpCode": 307,
    "description": "Temporary redirect."
  },
  "RestoreAlreadyInProgress": {
    "httpCode": 409,
    "description": "Object restore is already in progress."
  },
  "RequestIsNotMultiPartContent": {
    "httpCode": 400,
    "description": "Bucket POST must be of the enclosure-type multipart/form-data."
  },
  "RequestTimeout": {
    "httpCode": 400,
    "description": "Your socket connection to the server was not read from or written to within the timeout period."
  },
  "RequestTimeTooSkewed": {
    "httpCode": 403,
    "description": "The difference between the request time and the server's time is too large."
  },
  "RequestTorrentOfBucketError": {
    "httpCode": 400,
    "description": "Requesting the torrent file of a bucket is not permitted."
  },
  "SignatureDoesNotMatch": {
    "httpCode": 403,
    "description": "The request signature we calculated does not match the signature you provided."
  },
  "_comment" : {
    "note" : "This is an AWS S3 specific error. We are opting to use the more general 'ServiceUnavailable' error used throughout AWS (IAM/EC2) to have uniformity of error messages even though we are potentially compromising S3 compatibility.",    
    "ServiceUnavailable": {
      "httpCode": 503,
      "description": "Reduce your request rate."
    }
  },
  "ServiceUnavailable": { 
    "httpCode": 503,
    "description": "The request has failed due to a temporary failure of the server."
  },
  "SlowDown": {
    "httpCode": 503,
    "description": "Reduce your request rate."
  },
  "TemporaryRedirect": {
    "httpCode": 307,
    "description": "You are being redirected to the bucket while DNS updates."
  },
  "TokenRefreshRequired": {
    "httpCode": 400,
    "description": "The provided token must be refreshed."
  },
  "TooManyBuckets": {
    "httpCode": 400,
    "description": "You have attempted to create more buckets than allowed."
  },
  "TooManyParts": {
    "httpCode": 400,
    "description": "You have attempted to upload more parts than allowed."
  },
  "UnexpectedContent": {
    "httpCode": 400,
    "description": "This request does not support content."
  },
  "UnresolvableGrantByEmailAddress": {
    "httpCode": 400,
    "description": "The email address you provided does not match any account on record."
  },
  "UserKeyMustBeSpecified": {
    "httpCode": 400,
    "description": "The bucket POST must contain the specified field name. If it is specified, check the order of the fields."
  },
  "NoSuchEntity": {
    "httpCode": 404,
    "description": "The request was rejected because it referenced an entity that does not exist. The error message describes the entity."
  },
  "WrongFormat": {
    "httpCode": 400,
    "description": "Data entered by the user has a wrong format."
  },
  "Forbidden": {
    "httpCode": 403,
    "description": "Authentication failed."
  },
  "EntityDoesNotExist": {
    "httpCode": 404,
    "description": "Not found."
  },
  "EntityAlreadyExists": {
    "httpCode": 409,
    "description": "The request was rejected because it attempted to create a resource that already exists."
  },
  "ServiceFailure": {
    "httpCode": 500,
    "description": "Server error: the request processing has failed because of an unknown error, exception or failure."
  },
  "IncompleteSignature": {
    "httpCode": 400,
    "description": "The request signature does not conform to AWS standards."
  },
  "InternalFailure": {
    "httpCode": 500,
    "description": "The request processing has failed because of an unknown error, exception or failure."
  },
  "InvalidAction": {
    "httpCode": 400,
    "description": "The action or operation requested is invalid. Verify that the action is typed correctly."
  },
  "InvalidClientTokenId": {
    "httpCode": 403,
    "description": "The X.509 certificate or AWS access key ID provided does not exist in our records."
  },
  "InvalidParameterCombination": {
    "httpCode": 400,
    "description": "Parameters that must not be used together were used together."
  },
  "InvalidParameterValue": {
    "httpCode": 400,
    "description": "An invalid or out-of-range value was supplied for the input parameter."
  },
  "InvalidQueryParameter": {
    "httpCode": 400,
    "description": "The AWS query string is malformed or does not adhere to AWS standards."
  },
  "MalformedQueryString": {
    "httpCode": 404,
    "description": "The query string contains a syntax error."
  },
  "MissingAction": {
    "httpCode": 400,
    "description": "The request is missing an action or a required parameter."
  },
  "MissingAuthenticationToken": {
    "httpCode": 403,
    "description": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
  },
  "MissingParameter": {
    "httpCode": 400,
    "description": "A required parameter for the specified action is not supplied."
  },
  "OptInRequired": {
    "httpCode": 403,
    "description": "The AWS access key ID needs a subscription for the service."
  },
  "RequestExpired": {
    "httpCode": 400,
    "description": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
  },
  "Throttling": {
    "httpCode": 400,
    "description": "The request was denied due to request throttling."
  },
  "_comment": "-------------- Internal project errors --------------",
  "_comment": "----------------------- Vault -----------------------",
  "_comment": "#### formatErrors ####",
  "badName": {
    "description": "name not ok",
    "code": 5001
  },
  "badAccount": {
    "description": "account not ok",
    "code": 5002
  },
  "badGroup": {
    "description": "group not ok",
    "code": 5003
  },
  "badId": {
    "description": "id not ok",
    "code": 5004
  },
  "badAccountName": {
    "description": "accountName not ok",
    "code": 5005
  },
  "badNameFriendly": {
    "description": "nameFriendly not ok",
    "code": 5006
  },
  "badEmailAddress": {
    "description": "email address not ok",
    "code": 5007
  },
  "badPath": {
    "description": "path not ok",
    "code": 5008
  },
  "badArn": {
    "description": "arn not ok",
    "code": 5009
  },
  "badCreateDate": {
    "description": "createDate not ok",
    "code": 5010
  },
  "badLastUsedDate": {
    "description": "lastUsedDate not ok",
    "code": 5011
  },
  "badNotBefore": {
    "description": "notBefore not ok",
    "code": 5012
  },
  "badNotAfter": {
    "description": "notAfter not ok",
    "code": 5013
  },
  "badSaltedPwd": {
    "description": "salted password not ok",
    "code": 5014
  },
  "ok": {
    "description": "No error",
    "code": 5015
  },
  "badUser": {
    "description": "user not ok",
    "code": 5016
  },
  "badSaltedPasswd": {
    "description": "salted password not ok",
    "code": 5017
  },
  "badPasswdDate": {
    "description": "password date not ok",
    "code": 5018
  },
  "badCanonicalId": {
    "description": "canonicalId not ok",
    "code": 5019
  },
  "badAlias": {
    "description": "alias not ok",
    "code": 5020
  },
  "_comment": "#### internalErrors ####",
  "dBPutFailed": {
    "description": "DB put failed",
    "code": 5021
  },
  "_comment": "#### alreadyExistErrors ####",
  "accountEmailAlreadyUsed": {
    "description": "an other account already uses that email",
    "code": 5022
  },
  "accountNameAlreadyUsed": {
    "description": "an other account already uses that name",
    "code": 5023
  },
  "userEmailAlreadyUsed": {
    "description": "an other user already uses that email",
    "code": 5024
  },
  "userNameAlreadyUsed": {
    "description": "an other user already uses that name",
    "code": 5025
  },
  "_comment": "#### doesntExistErrors ####",
  "noParentAccount": {
    "description": "parent account does not exist",
    "code": 5026
  },
  "_comment": "#### authErrors ####",
  "badStringToSign": {
    "description": "stringToSign not ok'",
    "code": 5027
  },
  "badSignatureFromRequest": {
    "description": "signatureFromRequest not ok",
    "code": 5028
  },
  "badAlgorithm": {
    "description": "hashAlgorithm not ok",
    "code": 5029
  },
  "secretKeyDoesNotExist": {
    "description": "secret key does not exist",
    "code": 5030
  }, 
  "invalidRegion": {
    "description": "Region was not provided or is not recognized by the system",
    "code": 5031
  },
  "scopeDate": {
    "description": "scope date is missing, or format is invalid",
    "code": 5032
  },
  "badAccessKey": {
    "description": "access key not ok",
    "code": 5033
  },
  "noDict": {
    "description": "no dictionary of params provided for signature verification",
    "code": 5034
  },
  "badSecretKey": {
    "description": "secretKey not ok",
    "code": 5035
  },
  "badSecretKeyValue": {
    "description": "secretKey value not ok",
    "code": 5036
  },
  "badSecretKeyStatus": {
    "description": "secretKey status not ok",
    "code": 5037
  },
  "_comment": "#### OidcpErrors ####",
  "badUrl": {
    "description": "url not ok",
    "code": 5038
  }, 
  "badClientIdList": {
    "description": "client id list not ok'",
    "code": 5039
  }, 
  "badThumbprintList": {
    "description": "thumbprint list not ok'",
    "code": 5040
  }, 
  "badObject": {
    "description": "Object not ok'",
    "code": 5041
  },
  "_comment": "#### RoleErrors ####",
  "badRole": {
    "description": "role not ok",
    "code": 5042
  }, 
  "_comment": "#### SamlpErrors ####",
  "badSamlp": {
    "description": "samlp not ok",
    "code": 5043
  }, 
  "badMetadataDocument": {
    "description": "metadata document not ok",
    "code": 5044
  },
  "unauthorized": {
    "description": "not authenticated",
    "code": 5045
  },
  "_comment": "---------------------  MetaData ---------------------",
  "_comment": "#### formatErrors ####",
  "BucketAlreadyExist": {
    "description": "This bucket already exist",
    "code": 1001
  },
  "DBNotFound": {
    "description": "This DB does not exist",
    "code": 1002
  },
  "DBAlreadyExists": {
    "description": "This DB already exist",
    "code": 1003
  },
  "ObjNotFound": {
    "description": "This object does not exist",
    "code": 100
  }
}
